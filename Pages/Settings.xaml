<UserControl x:Class="AATUV3.Pages.SettingsMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:AATUV3.Pages"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="900">
    <UserControl.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="RoundedButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryBlueColorHover}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource PrimaryBlueColorDown}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid Loaded="Grid_Loaded">
        <Button Style="{DynamicResource RoundedButtonStyle}" Margin="0,0,7,3" Background="{DynamicResource PrimaryBlueColor}"  FontSize="16" Foreground="White" Content="Save Settings" Height="45" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="170" Click="btnSave_Click"/>
        <Label Content="General Settings:" FontSize="18" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="6,8,0,0" Width="310"/>

        <!--Temp Limit-->
        <CheckBox Name="cbStartOnBoot" Content="Start on System Boot" HorizontalAlignment="Left" Margin="33,47,0,0" VerticalAlignment="Top" Foreground="White" BorderBrush="White" FontSize="16" Width="283" BorderThickness="0,1,1,1" Padding="8,-4,0,0" Height="18" ToolTipService.ToolTip="Controls the APU's soft throttle temperature limit in °C"/>

        <!--Skin Temp Limit-->
        <CheckBox x:Name="cbStartMinimised" Content="Start Minimised" HorizontalAlignment="Left" Margin="33,71,0,0" VerticalAlignment="Top" Foreground="White" BorderBrush="White" FontSize="16" Width="283" BorderThickness="0,1,1,1" Padding="8,-4,0,0" Height="18"/>

        <!--STAPM Limit-->
        <CheckBox x:Name="cbAutoReapply" Content="Auto Reapply (s):" HorizontalAlignment="Left" Margin="33,95,0,0" VerticalAlignment="Top" Foreground="White" BorderBrush="White" FontSize="16" Width="283" BorderThickness="0,1,1,1" Padding="8,-4,0,0" Height="18"/>
        <xctk:IntegerUpDown x:Name="nudAutoReapply" Watermark="Enter Integer" Width="95" Height="20" Margin="314,94,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Minimum="0" Value="0"/>
        <Label Content="Overlay Settings:" FontSize="18" Foreground="White" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="10,202,0,0" Width="310"/>
        <CheckBox x:Name="cbSensorOverlay" Content="(Alpha) Enable Sensor Overlay (UXTU Restart Required)" HorizontalAlignment="Left" Margin="33,236,0,0" VerticalAlignment="Top" Foreground="White" BorderBrush="White" FontSize="16" Width="411" BorderThickness="0,1,1,1" Padding="8,-4,0,0" Height="18" ToolTipService.ToolTip="Controls the APU's soft throttle temperature limit in °C"/>
        <TextBlock Margin="33,262,456,241" Foreground="White" TextWrapping="Wrap" FontSize="11.5">Enables sensor overlay that can be toggled with Left-Alt + O or Dpad-Up + Left Shoulder Button for controllers. Includes FPS counter that currently only works in DirectX games. Use fullscreen borderless for the best game compatibility.</TextBlock>
        <!--PL1 Limit-->

        <!--PL2 Limit-->

        <!--PL1 Duration-->

        <!--PL2 Duration-->
    </Grid>
</UserControl>
